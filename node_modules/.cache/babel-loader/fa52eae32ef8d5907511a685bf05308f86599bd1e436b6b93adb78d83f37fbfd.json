{"ast":null,"code":"import{useState}from\"react\";import{useAuthContext}from\"./useAuthContext\";export const useSignup=()=>{const[error,setError]=useState(null);const[isLoading,setIsLoading]=useState(null);const[signUpSuccess,setSignUpSuccess]=useState(false);const{dispatch}=useAuthContext();const signup=async(username,password)=>{setIsLoading(true);setError(null);const response=await fetch(\"/api/users/signup\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password})});const json=await response.json();if(!response.ok){setIsLoading(false);setSignUpSuccess(false);setError(json.error);}else{//save the user to local storage\nlocalStorage.setItem('user',JSON.stringify(json));//update auth context\ndispatch({type:'LOGIN',payload:json});setSignUpSuccess(true);setIsLoading(false);}};return{signup,isLoading,error,signUpSuccess};};","map":{"version":3,"names":["useState","useAuthContext","useSignup","error","setError","isLoading","setIsLoading","signUpSuccess","setSignUpSuccess","dispatch","signup","username","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["/Users/alexnham/Desktop/cs/mern/ProjManage/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useSignup = () => {\n    const [error,setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(null)\n    const [signUpSuccess, setSignUpSuccess] = useState(false)\n\n    const { dispatch } = useAuthContext()\n\n    const signup = async(username, password) => {\n        setIsLoading(true)\n        setError(null)\n\n        const response = await fetch(`/api/users/signup`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({username,password})\n        })\n        const json = await response.json()\n\n        if(!response.ok) {\n            setIsLoading(false)\n            setSignUpSuccess(false)\n            setError(json.error)\n        } else {\n            //save the user to local storage\n            localStorage.setItem('user',JSON.stringify(json))\n\n            //update auth context\n            dispatch({type: 'LOGIN', payload: json})\n            setSignUpSuccess(true)\n            setIsLoading(false)\n\n        }\n    }\n    return {signup, isLoading, error, signUpSuccess}\n}"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,cAAc,KAAQ,kBAAkB,CAEjD,MAAO,MAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,KAAK,CAACC,QAAQ,CAAC,CAAGJ,QAAQ,CAAC,IAAI,CAAC,CACvC,KAAM,CAACK,SAAS,CAAEC,YAAY,CAAC,CAAGN,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACO,aAAa,CAAEC,gBAAgB,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAEzD,KAAM,CAAES,QAAS,CAAC,CAAGR,cAAc,CAAC,CAAC,CAErC,KAAM,CAAAS,MAAM,CAAG,KAAAA,CAAMC,QAAQ,CAAEC,QAAQ,GAAK,CACxCN,YAAY,CAAC,IAAI,CAAC,CAClBF,QAAQ,CAAC,IAAI,CAAC,CAEd,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAC,KAAK,qBAAsB,CAC9CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAC,cAAc,CAAE,kBAAkB,CAAC,CAC7CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACR,QAAQ,CAACC,QAAQ,CAAC,CAC5C,CAAC,CAAC,CACF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAElC,GAAG,CAACP,QAAQ,CAACQ,EAAE,CAAE,CACbf,YAAY,CAAC,KAAK,CAAC,CACnBE,gBAAgB,CAAC,KAAK,CAAC,CACvBJ,QAAQ,CAACgB,IAAI,CAACjB,KAAK,CAAC,CACxB,CAAC,IAAM,CACH;AACAmB,YAAY,CAACC,OAAO,CAAC,MAAM,CAACL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC,CAEjD;AACAX,QAAQ,CAAC,CAACe,IAAI,CAAE,OAAO,CAAEC,OAAO,CAAEL,IAAI,CAAC,CAAC,CACxCZ,gBAAgB,CAAC,IAAI,CAAC,CACtBF,YAAY,CAAC,KAAK,CAAC,CAEvB,CACJ,CAAC,CACD,MAAO,CAACI,MAAM,CAAEL,SAAS,CAAEF,KAAK,CAAEI,aAAa,CAAC,CACpD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}